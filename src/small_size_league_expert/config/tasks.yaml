question_analysis_task:
  description: >
    Systematically analyze the input question to detect language and decompose into strategic sub-questions that maximize retrieval effectiveness.

    Today's date is: {current_date}

    Step 1: Language Detection Analysis
    - Identify primary language using linguistic markers
    - Note any mixed-language elements or technical terms
    - Assign ISO language code

    Step 2: Question Semantic Analysis
    - Write the exact same question in English for search purposes
    - Analyze question structure for:
      - Core technical concepts
      - Keywords and phrases
      - Question type (what/how/why/when/where)
      - Complexity level and target audience

    Step 3: Field of Knowledge classification
    - Classify question into Small Size League specific domains (technical/rules/strategy)
    - Classify question into general technical domains (algorithms/hardware/software)
    - Identify any cross-domain relationships (e.g., hardware affecting strategy)

    Step 4: Sub-Question Generation Strategy
    - Generate focused sub-questions covering different knowledge domains
    - Ensure each sub-question targets specific retrievable information
    - Validate sub-questions align with available knowledge sources

    # EXAMPLES:

    ## Example 1:
    Input: "¿Cuáles son las dimensiones oficiales del campo de fútbol robot?"
    Output: {
      "question": "What are the official robot soccer field dimensions?",
      "language_code": "es_ES",
      "sub_questions": [
        "What are the official SSL field dimensions in meters?",
        "What are the goal area specifications in SSL?",
        "What are the penalty area measurements in SSL?"
      ],
      "keywords": ["dimensions", "field"],
      "technical_domains": ["rules", "technical specifications"],
    }


    ## Example 2:
    Input: "How does the vision system track multiple robots simultaneously?"
    Output: {
      "question": "How does the vision system track multiple robots simultaneously?",
      "language_code": "en_US",
      "sub_questions": [
        "What computer vision algorithms are used in SSL global vision?",
        "How does SSL vision system handle robot identification and tracking?",
        "What are the technical specifications of SSL vision hardware?"
      ],
      "keywords": ["vision system", "tracking", "robots"],
      "technical_domains": ["computer vision", "hardware specifications"],
    }

    ## Example 3:
    Input: "Wie funktioniert die Kommunikation zwischen Robotern im Spiel?"
    Output: {
      "question": "How does communication between robots work in the game?",
      "language_code": "de_DE",
      "sub_questions": [
        "What communication protocols are allowed in SSL robot teams?",
        "How do SSL robots coordinate during gameplay?",
        "What are the communication frequency limitations in SSL?"
      ],
      "keywords": ["communication", "robots", "gameplay"],
      "technical_domains": ["communication protocols", "radio communication"],
    }

    ## Question
    Input: {original_question}
    Output:
  expected_output: >
    A structured analysis containing:
    1. Detected language code (ISO format)
    2. Translated question in English
    3. Core technical concepts identified
    4. Keywords extracted from the question
    5. Exactly 3 focused sub-questions in English that:
       - Cover different knowledge domains (technical/rules/strategy)
       - Are directly answerable using available sources
       - Maintain semantic coherence with original question
       - Follow the few-shot examples pattern
  agent: question_handler

retrieval_task:
  description: >
    Execute strategic content retrieval using systematic search methodology to gather comprehensive, authoritative information for each sub-question.

    Step 1: Source Prioritization Strategy
    - Analyze each question/sub-question to determine optimal source types
    - Read the knowledge base (knowledge/content_description.txt file) to understand the content types
    - Prioritize MCP SSL-specific sources for domain knowledge
    - Identify Wikipedia needs for general technical concepts
    - Plan search query optimization for maximum relevance

    Step 2: MCP Source Exploitation
    - Execute targeted searches using SSL-specific terminology
    - Retrieve official documentation, rules, and specifications
    - Gather team descriptions and technical papers
    - Extract competition guidelines and historical data

    Step 3: Wikipedia Supplementation
    - Search for general technical concepts not in SSL sources
    - Retrieve foundational knowledge (algorithms, protocols, hardware)
    - Gather context for technical terms and methodologies
    - Supplement with academic and industry standards

    <Content Retrieval Guidelines>
    - MCP Rules documents will contain the rules of the competition, including field dimensions, game rules, and technical specifications, match duration, players limitations, etc.
    - MCP Website documents will contain general data about the category, including events, teams, some category software technical details, etc.
    - Team description papers are documents submitted by teams that describe their robots, strategies, and technical implementations. These kind of documents are usually submitted before the competition and can contain valuable information about the team’s approach to the game. It should be used to search any kind of deep technical information about the team’s choices related to algorithms, hardware, motors, sensors, radios, software and other technical aspects.
    - Wikipedia articles will contain general technical concepts, algorithms, protocols, and hardware specifications that are not specific to SSL but provide foundational knowledge.

    <INSTRUCTIONS>
    - If the question is majority technical, prioritize MCP sources (team description papers)
    - If is related to the category definitions, you can search the MCP website
    - If the question is related to the game rules, prioritize MCP rules documents
    - Do not generate examples or explanations, just retrieve the content

  expected_output: >
    A comprehensive collection of documents organized by question, sub-questions or keywords.
    Format: Structured list with clear source attribution and metadata for optimal ranking phase input.
  agent: retriever

ranking_task:
  description: >
    Apply systematic evaluation criteria using chain-of-thought analysis to rank and filter retrieved content for maximum educational value and accuracy.

    The question is: "{original_question}"

    CHAIN OF THOUGHT RANKING PROCESS:

    Step 1: Relevance Assessment Matrix
    For each content snippet, evaluate:
    - Direct answer potential (Does it directly address the sub-question?)
    - Conceptual alignment (How well does it match the original question intent?)
    - Technical depth appropriateness (Matches user's apparent knowledge level?)
    - Scope coverage (How much of the sub-question does it answer?)

    Step 2: Authority and Reliability Scoring
    - Source credibility: Official SSL > Academic > Team Documentation > Community
    - Content freshness: Recent official updates > Historical documentation
    - Technical accuracy indicators: References, citations, technical detail level
    - Community validation: Known reliable sources vs unverified content

    Step 3: Educational Value Analysis
    - Pedagogical progression: Builds understanding systematically
    - Practical applicability: Actionable information vs theoretical only
    - Completeness: Provides sufficient detail for understanding
    - Clarity: Technical accuracy without unnecessary complexity

    Step 4: Synthesis Optimization
    - Complementary content identification: Pieces that work well together
    - Redundancy elimination: Remove duplicate information
    - Gap identification: Missing critical information areas
    - Answer architecture: How pieces combine for comprehensive response

    RANKING CRITERIA EXAMPLES:

    High Priority (Score 9-10):
    - Official SSL rules document excerpt answering field dimensions
    - Recent technical committee clarification on specific rule interpretation
    - Peer-reviewed algorithm description with SSL implementation details

    Medium Priority (Score 6-8):
    - Team description paper explaining successful strategy implementation
    - Academic paper with relevant algorithmic approach
    - Community-validated technical explanation with practical examples

    Low Priority (Score 3-5):
    - General Wikipedia article requiring significant context
    - Outdated documentation with superseded information
    - Incomplete explanations requiring substantial supplementation

    Exclude (Score 1-2):
    - Content unrelated to SSL or sub-questions
    - Contradictory information without authoritative resolution
    - Severely outdated or incorrect technical information
  expected_output: >
    A precisely ranked collection containing:
    1. Top 5-8 content snippets ranked by composite score (1-10)
    2. Detailed ranking justification for each selected snippet
    3. Authority level and source reliability assessment
    4. Educational value and pedagogical appropriateness rating
    5. Identified content gaps requiring synthesis or acknowledgment
    6. Recommended answer structure using ranked content
    7. Quality assurance notes for answer generation phase
    8. Do not include any content that is not directly relevant to the original question or sub-questions.
    9. Ensure that none  of the content is duplicated across the ranked snippets.
    10. Ensure that the content is in English, even if the original question was in another language.
    11. Ensure that no examples or explanations are generated, just the ranked retrieved content.

    Format: Structured ranking with clear rationale enabling optimal answer synthesis.
  agent: ranker

answer_generation_task:
  description: >
    Synthesize ranked content into an engaging, pedagogically optimized Discord response that educates while maintaining technical accuracy and platform constraints.

    CHAIN OF THOUGHT ANSWER CONSTRUCTION:

    Step 1: Content Synthesis Strategy
    - Analyze ranked content for logical flow and narrative structure
    - Identify key concepts requiring definition or context
    - Plan information hierarchy from fundamental to advanced

    Step 2: Language and Formatting Adaptation
    - Detect target language from original question analysis
    - Plan technical term translation strategy maintaining accuracy
    - Design Discord formatting for maximum readability
    - Optimize emoji placement for engagement without compromising professionalism

    Step 3: Source Integration Architecture
    - Plan inline citation strategy for each factual claim
    - Ensure every technical statement has authoritative backing
    - Design reference format for translated content marking
    - Validate all links are functional and accessible

    <INSTRUCTIONS>
      - Structure content for progressive understanding
      - Include practical implications where relevant
      - Balance technical depth with accessibility
      - CHARACTER LIMIT MANAGEMENT:
        - Target 1800 characters maximum (200 character buffer)
        - Prioritize most critical information first
        - Use bullet points for efficient information density
        - Implement graceful truncation with continuation indicators

    FORMATTING EXAMPLES:

    # Example 1:
      Question: "How does SSL vision work?"
      Answer:
      ```markdown
      **🤖 Based on your question: "How does SSL vision work?"**\n\n
      # 🤖 SSL Global Vision System\n
      The [SSL vision system uses multiple overhead cameras](https://ssl.robocup.org/vision) to track all robots and the ball simultaneously...\n
      *⚠️ This answer is AI-generated from SSL knowledge sources. Verify critical information with official SSL documentation.*\n
      ```

    # Example 2:
      Question: "¿Cómo funciona la visión SSL?"
      Answer:
      ```markdown
      "🤖 **Basado en tu pregunta: "¿Cómo funciona la visión SSL?"**\n\n
      # 🔍 Sistema de Visión Global SSL\n
      El [sistema de visión SSL utiliza múltiples cámaras aéreas](https://ssl.robocup.org/vision) para rastrear todos los robots y la pelota simultáneamente...\n
      *⚠️ Esta respuesta es generada por IA a partir de fuentes de conocimiento SSL. Verifica la información crítica con la documentación oficial de SSL.*\n
      ```

    # Example 3:
      Question: "Qual o tamanho do campo ?"
      Answer:
      ```markdown
      "🤖 **Baseado na sua pergunta: "Qual o tamanho do campo?"**\n\n
      # 🔍 Dimensões do Campo SSL\n
      O campo de jogo deve ser retangular e ter as seguintes dimensões:\n
      - Divisão A: 13,4 metros x 10,4 metros, com uma área de jogo de 12 metros x 9 metros.\n
      - Divisão B: 10,4 metros x 7,4 metros, com uma área de jogo de 9 metros x 6 metros.\n
      As dimensões exatas do campo e as marcações podem variar em até ±10% em cada dimensão linear. [Fonte](https://robocup-ssl.github.io/ssl-rules/sslrules.html)\n\n
      ### 📋 Detalhes Técnicos:\n
      - Área de defesa: retângulo tocando as linhas de gol centralmente em frente a ambos os gols.\n
      - Tamanho da área de defesa: 3,6 metros x 1,8 metros para a Divisão A e 2 metros x 1 metro para a Divisão B. [Fonte](https://robocup-ssl.github.io/ssl-rules/sslrules.html)\n\n
      ### ⚙️ Implicações Práticas:\n
      Compreender as dimensões do campo é crucial para o planejamento de estratégias de jogo e posicionamento dos robôs. Isso pode afetar diretamente a eficácia das jogadas e a dinâmica da partida.
      Busque o tamanho correto para a categoria do seu time.\n\n
      ---\n
      *⚠️ Esta resposta é gerada por IA a partir de fontes de conhecimento SSL. Verifica a informação crítica com a documentação oficial de SSL.*\n
      ```

    Question: {original_question}

  expected_output: >
    A professionally formatted Discord response that includes:
    1. Original question acknowledgment in the detected language
    2. Comprehensive answer synthesized from ranked content sources
    3. Inline citations for all factual claims with functional links
    4. Strategic emoji usage for enhanced readability and engagement
    5. Structured format using headers, bullet points, and clear sections
    6. Character count optimized for Discord (target 1800, max 2000 characters)
    7. Educational value with progressive information hierarchy
    8. AI-generated disclaimer in appropriate language
    9. Graceful handling of character limit constraints with content prioritization
    10. Technical accuracy maintained through authoritative source integration

    The response must follow the specified markdown template structure and maintain consistency with the provided formatting examples for different languages.

    Output format for reference:
    ```markdown
    **🤖 Based on your question: "{original_question}"**\n\n
    ## 🔍 Main Concept Title\n
    Core explanation with inline citations\n
    ### 📋 Key Technical Details:\n
    - Specific fact with [source](link)\n
    - Another fact with [source](link)\n
    - Additional detail where the source will be mentioned after\n
    - A comment that is referred to the above fact. [Source](link)\n
    ### ⚙️ Practical Implications:\n
    [How this applies in real SSL contexts]\n
    ---\n
    *⚠️ This answer is AI-generated from SSL knowledge sources. Verify critical information with official SSL documentation.*
    ```

    The answer must be inserted into the `markdown_answer` field of the task output.

  agent: answer_generator
